// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  user_id           String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  user_id      String
  expires      DateTime
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model User {
  id             String         @id @default(cuid())
  phone          String?        @unique
  name           String?
  username       String         @unique
  password       String
  email          String         @unique
  email_verified DateTime?
  image          String?
  linkedin       String?
  accounts       Account[]
  sessions       Session[]
  roles          RolesOnUsers[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Role {
  id            String         @id @default(cuid())
  name          String         @db.Char(100)
  created_by    String
  created_at    DateTime       @default(now())
  last_modifier String?
  updated_at    DateTime       @default(now())
  users         RolesOnUsers[]
}

model RolesOnUsers {
  user        User     @relation(fields: [user_id], references: [id])
  user_id     String
  role        Role     @relation(fields: [role_id], references: [id])
  role_id     String
  assigned_at DateTime @default(now())
  assigned_by String

  @@id([user_id, role_id])
}
